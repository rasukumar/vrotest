<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item9" object-name="workflow:name=generic" id="76d2d76e-c22d-4b6e-9b61-780d15ee2813" version="0.0.0" api-version="6.0.0" allowed-operations="vfe" editor-version="2.0" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Add Windows VM to Domain and OU]]></display-name>
  <position y="40.0" x="18.0"/>
  <input>
    <param name="inputProperties" type="Properties"/>
  </input>
  <attrib name="cmd" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="vmUsername" type="string" read-only="false" conf-id="37abddc7-c093-4fed-857b-38273fe27da5" conf-key="vmLocalUsername">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="vmPassword" type="SecureString" read-only="false" conf-id="37abddc7-c093-4fed-857b-38273fe27da5" conf-key="vmLocalPassword"/>
  <attrib name="interactiveSession" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="programPath" type="string" read-only="false">
    <value encoded="n"><![CDATA[C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe]]></value>
  </attrib>
  <attrib name="workingDirectory" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="environment" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[#{##}#]]></value>
  </attrib>
  <attrib name="result" type="number" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="ou" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="domain" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="vm" type="VC:VirtualMachine" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="wfRunProgramInGuest" type="Workflow" read-only="false">
    <value encoded="n"><![CDATA[dunes://service.dunes.ch/Workflow?id='C98080808080808080808080808080805E80808001322751030482b80adf61e7c'&dunesName='Workflow']]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="140.0" x="128.0"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item4" type="task">
    <display-name><![CDATA[Set command]]></display-name>
    <script encoded="false"><![CDATA[
var domainPrefix = domain.split(".")[0]
var configElements = Server.findAllForType("ConfigurationElement","name='domainCredentials'")
var creds = "" 
var attr =  configElements[0].getAttributeWithKey(domainPrefix)
creds = attr.value

var dUsername =  creds.username
var dPassword = creds.password
//System.log("domain username: "+dUsername)
//System.log("domain password: "+dPassword)


cmd = "cmd.exe /c 'netdom join "+vm.name+" /domain:"+domain+" /OU:\""+ou+"\" /UserD:"+dUsername+" /PasswordD:"+dPassword+" > c:\\netdom.txt'"
System.log(cmd)
]]></script>
    <in-binding>
      <bind name="domain" type="string" export-name="domain"/>
      <bind name="ou" type="string" export-name="ou"/>
      <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
    </in-binding>
    <out-binding>
      <bind name="cmd" type="string" export-name="cmd"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="50.0" x="320.0"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item1" type="task">
    <display-name><![CDATA[Read from payload]]></display-name>
    <script encoded="false"><![CDATA[
var jsontxt = JSON.stringify(inputProperties, null, 2)
System.log("jsontxt: " +jsontxt)
var json = JSON.parse(jsontxt)
System.log("parsed jsontxt: "+json)
var vmName = json.resourceNames[0]
System.log("vm name: "+vmName)
var ipAddress = json.addresses[0][0]
System.log("IP Address: "+ipAddress)

var custProp = inputProperties.get('customProperties')
var env = custProp.get('environment')
System.log("Environment: "+ env)
if(env == "P" || env == "R")
    env = "Prod"
else env = "NonProd"

// for SES,SHSES domain
var institutionCluster = custProp.get('institutionCluster')
System.log("Institution Cluster: "+ institutionCluster)
var tier = custProp.get('networkTier')
System.log("Network Tier: "+ tier)
//

domain = custProp.get('domain'); 
var domainPrefix = domain.split(".")[0]
System.log("domain Prefix: "+domainPrefix)

var guestOS = custProp.get('guestOS'); 
System.log("guestOS: "+guestOS)

var inputCat = domainPrefix+guestOS+env
if(institutionCluster == "SHS" && tier == "DB")
    inputCat=inputCat+"DB"
    
var configElement = "ouSelection"+domainPrefix
System.log("input category: "+inputCat)
System.log("Config Element: "+configElement)

ou = System.getModule("com.vmware.ihis").readConfigElementValues(inputCat,configElement,"web-root");
System.log("OU Path: "+ou)

vm = System.getModule("com.vmware.ihis").getVmFromVcenterByName(vmName);


/*
var projectId = inputProperties.get('projectId')
var projectNm = getProjectName(projectId)
System.log("Project Name: "+projectNm)
function getProjectName(projectId){
	var configElement = Server.findAllForType("ConfigurationElement","name='projectIdToName'")
    var projectName = ""
    var values = new Array()
	var attrs =  configElement[0].attributes
	for each (var attr in attrs){
        if(attr.value == projectId){
            projectName = attr.name
            break
        }            
	}
	return projectName
}
*/
]]></script>
    <in-binding>
      <bind name="inputProperties" type="Properties" export-name="inputProperties"/>
    </in-binding>
    <out-binding>
      <bind name="ou" type="string" export-name="ou"/>
      <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
      <bind name="domain" type="string" export-name="domain"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="50.0" x="200.0"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item5" type="task">
    <display-name><![CDATA[Scriptable task]]></display-name>
    <script encoded="false"><![CDATA[

var inputs,currentToken =""

    System.log("cmd: "+cmd)
    inputs = new Properties()
    inputs.put("interactiveSession",interactiveSession)
    inputs.put("workingDirectory",workingDirectory)
    inputs.put("environment",environment)
    inputs.put("programPath",programPath)
    inputs.put("vmPassword",vmPassword)
    inputs.put("vmUsername",vmUsername)
    inputs.put("arguments",cmd)
    inputs.put("vm",vm)
    currentToken = wfRunProgramInGuest.execute(inputs)
   // System.sleep(15 * 1000)
   System.getModule("com.vmware.ihis").wfState(currentToken);
]]></script>
    <in-binding>
      <bind name="wfRunProgramInGuest" type="Workflow" export-name="wfRunProgramInGuest"/>
      <bind name="cmd" type="string" export-name="cmd"/>
      <bind name="vmPassword" type="SecureString" export-name="vmPassword"/>
      <bind name="interactiveSession" type="boolean" export-name="interactiveSession"/>
      <bind name="programPath" type="string" export-name="programPath"/>
      <bind name="workingDirectory" type="string" export-name="workingDirectory"/>
      <bind name="environment" type="Array/string" export-name="environment"/>
      <bind name="vmUsername" type="string" export-name="vmUsername"/>
      <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
    </in-binding>
    <out-binding>
      <bind name="result" type="number" export-name="result"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="50.0" x="460.0"/>
  </workflow-item>
  <workflow-item name="item5" out-name="item6" type="link" linked-workflow-id="BD8080808080808080808080808080806CC180800122528313869552e41805bb1">
    <display-name><![CDATA[Reboot the VM after domain join]]></display-name>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
    </in-binding>
    <out-binding/>
    <description><![CDATA[ ]]></description>
    <position y="150.0" x="460.0"/>
  </workflow-item>
  <workflow-item name="item6" out-name="item0" type="task">
    <display-name><![CDATA[Sleep after reboot]]></display-name>
    <script encoded="false"><![CDATA[
// 90 secs
System.sleep(90 * 1000)
]]></script>
    <in-binding/>
    <out-binding/>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="150.0" x="339.0"/>
  </workflow-item>
  <workflow-item name="item9" out-name="item3" type="custom-condition" alt-out-name="item10">
    <display-name><![CDATA[Join Vm to Domain?]]></display-name>
    <script encoded="false"><![CDATA[
var custProp = inputProperties.get('customProperties')
var domainJoinYN = custProp.get('domainJoinYN')
System.log("domainJoinYN: "+ domainJoinYN)

return domainJoinYN]]></script>
    <in-binding>
      <bind name="inputProperties" type="Properties" export-name="inputProperties"/>
    </in-binding>
    <out-binding/>
    <description><![CDATA[Custom decision based on a custom script.]]></description>
    <position y="40.0" x="88.0"/>
  </workflow-item>
  <workflow-item name="item10" out-name="item0" type="task">
    <display-name><![CDATA[No domain join]]></display-name>
    <script encoded="false"><![CDATA[
System.log("User opted for not to join the VM to domain.")]]></script>
    <in-binding/>
    <out-binding/>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="100.0" x="77.0"/>
  </workflow-item>
  <presentation/>
</workflow>